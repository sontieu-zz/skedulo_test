global with sharing class TextSearchControllerRemoter {

    private String searchText;
   
    public TextSearchControllerRemoter() {
        searchText = ApexPages.currentPage().getParameters().get('search_text');
    }

    public String getSearchText() {
        return searchText;
    }

    public List<SearchItem> getSearchItems() {
        List<SearchItem> searchItems = new List<SearchItem>();
        
        if (searchText != null) {
            List<SearchItem> accountSearchItems = getAccountByName(searchText);
            if (accountSearchItems.size() > 0) {
                searchItems.addAll(accountSearchItems);
            }
    
            List<SearchItem> contactSearchItems = getContactByName(searchText);
            if (contactSearchItems.size() > 0) {
                searchItems.addAll(contactSearchItems);
            }            
        }
        
        return searchItems;
    }
    
    private List<SearchItem> getAccountByName(String name) {
        List<SearchItem> searchItems = new List<SearchItem>();

        List<Account> accounts = Database.query('SELECT Id, Name, Counter__c FROM Account WHERE Name LIKE \'' + name + '%\'');        
        for (Account account : accounts) {
            SearchItem item = new SearchItem();
            item.RecordId = account.Id;
            item.RecordName = account.Name;
            item.RecordType = 'Account';
            item.RecordCounter = account.Counter__c;
            searchItems.add(item);
        }

        return searchItems;
    }
    
    private List<SearchItem> getContactByName(String name) {
        List<SearchItem> searchItems = new List<SearchItem>();
        
        List<Contact> contacts = Database.query('SELECT Id, Name, Counter__c FROM Contact WHERE Name LIKE \'' + name + '%\'');        
        for (Contact contact : contacts) {
            SearchItem item = new SearchItem();
            item.RecordId = contact.Id;
            item.RecordName = contact.Name;
            item.RecordType = 'Contact';
            item.RecordCounter = contact.Counter__c;
            searchItems.add(item);
        }
        
        return searchItems;
    }
    
    @RemoteAction
    global static decimal updateCounter(String itemId, String recordType) {
        decimal recordCounter = 0;
        if (recordType == 'Account') {
          	Account account = [SELECT Id, Counter__c FROM Account WHERE id = :itemId];
            account.Counter__c += 1;
            update account;
            recordCounter = account.Counter__c;
        } else if (recordType == 'Contact') {
			Contact contact = [SELECT Id, Counter__c FROM Contact WHERE id = :itemId];
            contact.Counter__c += 1;
            update contact;
            recordCounter = contact.Counter__c;
        }

        return recordCounter;
    }
}